"""
Import Libraries: It imports the netmiko library for network device communication and the pprint library for pretty-printing the output.
Define Credentials: It sets up the username, password, device type, and port for connecting to the devices.
Define IP Addresses: It defines a tuple ip_tuple containing the IP addresses of the target devices.
Initialize Output List: It initializes an empty list output_list to store the results.
Iterate Through IP Addresses: It loops through each IP address in the ip_tuple.
Establish Connection: For each IP address, it establishes a connection to the device using the provided credentials and connection details.
Retrieve Hostname: It sends the command sh run | include hostname to the device to retrieve the hostname from the running configuration and stores the result in the hostname variable.
Retrieve IOS XE Version: It sends the command sh version | section Cisco IOS XE Software, Version to the device to retrieve the IOS XE version and stores the result in the ios_xe_version variable.
Store Results: It creates a tuple output_tuple containing the hostname and IOS XE version, and appends it to the output_list.
Pretty Print Output: Finally, it uses the pprint library to print the output_list in a formatted manner.
In summary, this code connects to multiple Cisco IOS devices, retrieves the hostname and IOS XE version from each device, and prints the results in a readable format. 

"""


import netmiko
import pprint

username = 'cisco' 
password = 'cisco' 
device_type = 'cisco_ios' 
port = 22 

ip_tuple = (
    '10.254.0.1',
    '10.254.0.2',
    '10.254.0.3',
)

output_list = []
for ip in ip_tuple:
    net_connect = netmiko.ConnectHandler(ip=ip, device_type=device_type, 
        username=username, password=password, port=port) 
    hostname = net_connect.send_command(
        'sh run | include hostname'
    ).strip() 
    ios_xe_version = net_connect.send_command(
        'sh version | section Cisco IOS XE Software, Version'
    ).strip()
output_tuple = (hostname, ios_xe_version)
output_list.append(output_tuple)

pprint.pprint(output_list)
