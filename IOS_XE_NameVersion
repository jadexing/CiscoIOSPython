"""
This code is designed to connect to a Cisco IOS device, retrieve the hostname and IOS XE version, and then print the results in a formatted manner. Here's a detailed breakdown of what each part of the code does:
Import Libraries: It imports the netmiko library for network device communication and the pprint library for pretty-printing the output.
Define Credentials: It sets up placeholders for the username, password, device type, and port. These should be replaced with actual values.
Define IP Addresses: It defines a tuple ip_tuple containing the IP address of the target device.
Initialize Output List: It initializes an empty list output_list to store the results.
Iterate Through IP Addresses: It loops through each IP address in the ip_tuple.
Establish Connection: Inside a try block, it attempts to establish a connection to the device using the provided credentials and connection details.
Retrieve Hostname: It sends the command sh run | include hostname to the device to retrieve the hostname and stores the result in the hostname variable.
Retrieve IOS XE Version: It sends the command sh version | section Cisco IOS XE Software, Version to the device to retrieve the IOS XE version and stores the result in the ios_xe_version variable.
Store Results: It creates a tuple output_tuple containing the hostname and IOS XE version, and appends it to the output_list.
Exception Handling: If an exception occurs during the connection or command execution, it prints an error message indicating the failure.
Pretty Print Output: Finally, it uses the pprint library to print the output_list in a formatted manner.
In summary, this code connects to a Cisco IOS device, retrieves the hostname and IOS XE version, and prints the results in a readable format.
"""

import netmiko
import pprint

# Define your username and password
username = '' 
password = '' 
device_type = 'cisco_ios' 
port = 22 

# Corrected IP tuple
ip_tuple = (
    '10.0.0.1',  # Removed the extra period
)

output_list = []

for ip in ip_tuple:
    try:
        # Establish the connection
        net_connect = netmiko.ConnectHandler(ip=ip, device_type=device_type, 
                                             username=username, password=password, port=port)
        
        # Get hostname
        hostname = net_connect.send_command('sh run | include hostname').strip()
        
        # Get IOS XE version
        ios_xe_version = net_connect.send_command('sh version | section Cisco IOS XE Software, Version').strip()
        
        # Create a tuple with the results
        output_tuple = (hostname, ios_xe_version)
        output_list.append(output_tuple)

    except Exception as e:
        print(f"Failed to connect to {ip}: {e}")

# Pretty print the output
pprint.pprint(output_list)
